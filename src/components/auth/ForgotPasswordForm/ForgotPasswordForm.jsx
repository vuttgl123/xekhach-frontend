import { useState } from "react";
import ForgotPasswordStep1 from "./ForgotPasswordStep1";
import ForgotPasswordStep2 from "./ForgotPasswordStep2";
import ForgotPasswordStep3 from "./ForgotPasswordStep3";
import { sendOtp, verifyOtp, resetPassword } from "../../api/authApi";
import { showErrorAlert } from "../../message/ErrorAlert";
import { showSuccessAlert } from "../../message/SuccessAlert";
import styles from "../../modal/modal.module.css";

const ForgotPasswordForm = ({ switchToLogin }) => {
    const [step, setStep] = useState(1);
    const [formData, setFormData] = useState({
        email: "",
        otp: "",
        newPassword: "",
        confirmPassword: "",
    });

    // üìå X·ª≠ l√Ω thay ƒë·ªïi input
    const handleChange = (e) => {
        setFormData({ ...formData, [e.target.name]: e.target.value });
    };

    // üìå G·ª≠i y√™u c·∫ßu g·ª≠i OTP
    const handleSendOtp = async (e) => {
        e.preventDefault();
        try {
            await sendOtp(formData.email);
            showSuccessAlert("M√£ OTP ƒë√£ ƒë∆∞·ª£c g·ª≠i ƒë·∫øn email c·ªßa b·∫°n!");
            setStep(2); // ‚úÖ Chuy·ªÉn sang b∆∞·ªõc nh·∫≠p OTP
        } catch (err) {
            showErrorAlert("H√£y ki·ªÉm tra l·∫°i t√†i kho·∫£n email!");
        }
    };

    // üìå X√°c th·ª±c OTP
    const handleVerifyOtp = async (e) => {
        e.preventDefault();
        try {
            await verifyOtp(formData.email, formData.otp);
            showSuccessAlert("X√°c th·ª±c OTP th√†nh c√¥ng! H√£y ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u.");
            setStep(3); // ‚úÖ Chuy·ªÉn sang b∆∞·ªõc ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u
        } catch (err) {
            showErrorAlert(err.message);
        }
    };

    // üìå ƒê·ªïi m·∫≠t kh·∫©u m·ªõi
    const handleResetPassword = async (e) => {
        e.preventDefault();
        if (formData.newPassword !== formData.confirmPassword) {
            showErrorAlert("M·∫≠t kh·∫©u x√°c nh·∫≠n kh√¥ng kh·ªõp!");
            return;
        }
        try {
            await resetPassword(formData.email, formData.newPassword);
            showSuccessAlert("M·∫≠t kh·∫©u ƒë√£ ƒë∆∞·ª£c c·∫≠p nh·∫≠t th√†nh c√¥ng!");
            switchToLogin(); // ‚úÖ Quay v·ªÅ m√†n h√¨nh ƒëƒÉng nh·∫≠p
        } catch (err) {
            showErrorAlert(err.message);
        }
    };

    return (
        <div className={styles.formContainer}>
            {step === 1 && <ForgotPasswordStep1 formData={formData} handleChange={handleChange} handleSendOtp={handleSendOtp} />}
            {step === 2 && <ForgotPasswordStep2 formData={formData} handleChange={handleChange} handleVerifyOtp={handleVerifyOtp} />}
            {step === 3 && <ForgotPasswordStep3 formData={formData} handleChange={handleChange} handleResetPassword={handleResetPassword} switchToLogin={switchToLogin} />}
        </div>
    );
};

export default ForgotPasswordForm;
