import { useState, useRef, useEffect, useContext } from "react";
import {
  FaUser,
  FaSignOutAlt,
  FaGift,
  FaRegCreditCard,
  FaRegUser,
  FaAngleDown,
  FaTicketAlt,
  FaStar,
} from "react-icons/fa";
import { useNavigate } from "react-router-dom";
import styles from "./userdropdown.module.css";
import { logout } from "../api/authApi";
import { showSuccessAlert } from "../message/SuccessAlert";
import { showErrorAlert } from "../message/ErrorAlert";
import { UserContext } from "../../context/UserContext"; // ‚úÖ L·∫•y context

const UserDropdown = ({ userName }) => {
  const [isOpen, setIsOpen] = useState(false);
  const dropdownRef = useRef(null);
  const navigate = useNavigate();
  const { setUser } = useContext(UserContext); // ‚úÖ d√πng context ƒë·ªÉ logout

  // üìå ƒê√≥ng dropdown khi click ra ngo√†i
  useEffect(() => {
    const handleClickOutside = (event) => {
      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {
        setIsOpen(false);
      }
    };
    document.addEventListener("mousedown", handleClickOutside);
    return () => document.removeEventListener("mousedown", handleClickOutside);
  }, []);

  // ‚úÖ X·ª≠ l√Ω ƒëƒÉng xu·∫•t
  const handleLogout = async () => {
    try {
      await logout(); // API ƒëƒÉng xu·∫•t (n·∫øu c√≥)
      setUser(null);  // C·∫≠p nh·∫≠t context ‚Üí ·∫©n UserDropdown to√†n app
      await showSuccessAlert("ƒêƒÉng xu·∫•t th√†nh c√¥ng!");
      navigate("/home");
    } catch (error) {
      showErrorAlert("L·ªói khi ƒëƒÉng xu·∫•t. Vui l√≤ng th·ª≠ l·∫°i!");
      console.error("L·ªói khi ƒëƒÉng xu·∫•t:", error);
    }
  };

  // üìå ƒêi·ªÅu h∆∞·ªõng trong dashboard
  const handleNavigate = (section) => {
    navigate(`/user-dashboard?section=${section}`);
    setIsOpen(false);
  };

  return (
    <div className={styles.userDropdown} ref={dropdownRef}>
      <div
        className={`${styles.userProfile} ${isOpen ? styles.open : ""}`}
        onClick={() => setIsOpen(!isOpen)}
        role="button"
        aria-expanded={isOpen}
        tabIndex={0}
      >
        <FaUser className={styles.menuIcon} />
        <span>{userName}</span>
        <FaAngleDown className={styles.dropdownIcon} />
      </div>

      {isOpen && (
        <div className={styles.dropdownMenu} role="menu">
          <ul>
            <li onClick={() => handleNavigate("profile")}>
              <FaRegUser className={styles.menuIcon} />
              Th√¥ng tin t√†i kho·∫£n
            </li>
            <li onClick={() => handleNavigate("membership")}>
              <FaTicketAlt className={styles.menuIcon} />
              Th√†nh vi√™n <strong>Th∆∞·ªùng</strong>
            </li>
            <li onClick={() => handleNavigate("cards")}>
              <FaRegCreditCard className={styles.menuIcon} />
              Qu·∫£n l√Ω th·∫ª
            </li>
            <li onClick={() => handleNavigate("reviews")}>
              <FaStar className={styles.menuIcon} />
              Nh·∫≠n x√©t chuy·∫øn ƒëi
            </li>
            <li onClick={() => handleNavigate("offers")}>
              <FaGift className={styles.menuIcon} />
              ∆Øu ƒë√£i
            </li>
            <li className={styles.logout} onClick={handleLogout}>
              <FaSignOutAlt className={styles.menuIcon} />
              ƒêƒÉng xu·∫•t
            </li>
          </ul>
        </div>
      )}
    </div>
  );
};

export default UserDropdown;
