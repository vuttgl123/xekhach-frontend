const API_BASE_URL = import.meta.env.VITE_API_BASE_URL || "http://localhost:5120/api/users";
// const API_BASE_URL = "http://localhost:5120/api/users";
const DEFAULT_HEADERS = {
    "Content-Type": "application/json",
};

// X·ª≠ l√Ω ph·∫£n h·ªìi API
const handleResponse = async (response) => {
    if (!response.ok) {
        let errorMessage = "L·ªói kh√¥ng x√°c ƒë·ªãnh!";
        try {
            const errorText = await response.text();
            console.error("üî¥ Ph·∫£n h·ªìi l·ªói t·ª´ API:", errorText); // Log ra l·ªói t·ª´ server
            if (errorText) {
                const errorData = JSON.parse(errorText);
                errorMessage = errorData.message || errorMessage;
            }
        } catch (err) {
            console.error("üö® Kh√¥ng th·ªÉ parse JSON t·ª´ l·ªói API:", err);
        }
        throw new Error(errorMessage);
    }
    
    const text = await response.text();
    return text ? JSON.parse(text) : {}; 
};


// üü¢ API ƒêƒÉng nh·∫≠p
export const login = async (email, password) => {
    try {
        const response = await fetch(`${API_BASE_URL}/login`, {
            method: "POST",
            headers: DEFAULT_HEADERS,
            body: JSON.stringify({ email, password }),
            credentials: "include",
        });
        return await handleResponse(response);
    } catch (error) {
        console.error("L·ªói khi ƒëƒÉng nh·∫≠p:", error);
        throw error;
    }
};

// üü¢ API ƒêƒÉng k√Ω (M·ªöI)
export const register = async (userData) => {
    // console.log("üîç API g·ªçi ƒë·∫øn:", `${API_BASE_URL}/register`);
    // console.log("üì® D·ªØ li·ªáu g·ª≠i l√™n API:", userData);
    try {
        const response = await fetch(`${API_BASE_URL}/register`, {
            method: "POST",
            headers: DEFAULT_HEADERS,
            body: JSON.stringify(userData),
        });
        return await handleResponse(response);
    } catch (error) {
        console.error("L·ªói khi ƒëƒÉng k√Ω:", error);
        throw error;
    }
};


// üü¢ API L·∫•y th√¥ng tin ng∆∞·ªùi d√πng
export const fetchUserProfile = async () => {
    try {
        const response = await fetch(`${API_BASE_URL}/me`, {
            method: "GET",
            credentials: "include",
        });

        if (!response.ok) {
            if (response.status === 401) {
                // console.log("üö® Kh√¥ng c√≥ token, user ƒë√£ ƒëƒÉng xu·∫•t.");
                return null; // ‚úÖ Tr·∫£ v·ªÅ null n·∫øu kh√¥ng c√≥ token
            }
            throw new Error("Kh√¥ng th·ªÉ l·∫•y th√¥ng tin ng∆∞·ªùi d√πng.");
        }

        return await response.json();
    } catch (error) {
        // console.error("L·ªói khi l·∫•y th√¥ng tin ng∆∞·ªùi d√πng:", error);
        return null;
    }
};

export const updateUserProfile = async (userData) => {
    try {
        const response = await fetch(`${API_BASE_URL}/me`, {
            method: "PUT",
            credentials: "include",
            headers: {
                "Content-Type": "application/json",
            },
            body: JSON.stringify(userData),
        });

        if (!response.ok) {
            throw new Error("Kh√¥ng th·ªÉ c·∫≠p nh·∫≠t th√¥ng tin ng∆∞·ªùi d√πng.");
        }

        return await response.json(); // Tr·∫£ v·ªÅ d·ªØ li·ªáu c·∫≠p nh·∫≠t
    } catch (error) {
        console.error("L·ªói khi c·∫≠p nh·∫≠t th√¥ng tin ng∆∞·ªùi d√πng:", error);
        return null;
    }
};

// üü¢ API ƒêƒÉng xu·∫•t
export const logout = async () => {
    try {
        const response = await fetch(`${API_BASE_URL}/logout`, {
            method: "POST",
            credentials: "include",
        });
        return await handleResponse(response);
    } catch (error) {
        console.error("L·ªói khi ƒëƒÉng xu·∫•t:", error);
    }
};

// üìå G·ª≠i OTP
export const sendOtp = async (email) => {
    try {
        const response = await fetch(`${API_BASE_URL}/forgot-password`, {
            method: "POST",
            headers: DEFAULT_HEADERS,
            body: JSON.stringify({ email }),
        });
        if (!response.ok) throw new Error("L·ªói khi g·ª≠i OTP!");
        return await response.json();
    } catch (error) {
        throw new Error(error.message);
    }
};

// üìå X√°c nh·∫≠n OTP
export const verifyOtp = async (email, otpCode) => {
    try {
        // console.log("üîç G·ª≠i d·ªØ li·ªáu:", { email, otpCode }); // Ki·ªÉm tra log
        const response = await fetch(`${API_BASE_URL}/verify-otp`, {
            method: "POST",
            headers: DEFAULT_HEADERS,
            body: JSON.stringify({ email, otpCode }),  // Ki·ªÉm tra l·∫°i bi·∫øn n√†y
        });
        return await handleResponse(response);
    } catch (error) {
        console.error("‚ùå L·ªói khi x√°c nh·∫≠n OTP:", error);
        throw error;
    }
};


// üìå ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u
export const resetPassword = async (email, newPassword) => {
    try {
        const response = await fetch(`${API_BASE_URL}/reset-password`, {
            method: "POST",
            headers: DEFAULT_HEADERS,
            body: JSON.stringify({ email, newPassword }),
        });
        if (!response.ok) throw new Error("Kh√¥ng th·ªÉ c·∫≠p nh·∫≠t m·∫≠t kh·∫©u!");
        return await response.json();
    } catch (error) {
        throw new Error(error.message);
    }
};